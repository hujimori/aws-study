AWSTemplateFormatVersion: 2010-09-09
Description: Create EC2 Instance
Parameters:
  InstanceType:
    Description: WebServer EC2 Instance Type
    Type: String
    Default: t2.micro
    AllowedValues:
    - t1.micro
    - t2.nano
    - t2.micro
    - t2.small
    - t2.medium
    - t2.large
    ConstraintDescription: must be a valid EC2 instance type
  SubnetId:
    Type: String
    Default: subnet-07c67d27b8b25dc8b
    AllowedValues:
    - subnet-07c67d27b8b25dc8b
    - subnet-02c9f99088b362365
    - subnet-08325eaf40601e9e9
    ConstraintDescription: must be a valid SubnetID
  KeyName:
    Description: Name of an existing EC2 KeyPair.
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: Can contain only ASCâ…±charcters.
  SSHLocation:
    Description: IP address range that can be used to SSH the EC2 instances.
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 0.0.0.0/0
    AllowedPattern: (\d{1,3})\.(\d{1,3}).(\d{1,3}).(\d{1,3})/(\d{1,2})
    ConstraintDescription: must be valid IP CIDR range of the from x.x.x.x/x.x.
Mappings:
  RegionMap:
    ap-northeast-1:
      hvm: "ami-0ed41f7b7da29124e"
    ap-southeast-1:
      hvm: "ami-0dd5a8a63d37f394c"

Resources:
  MyEC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !FindInMap [RegionMap, !Ref 'AWS::Region', hvm]
      InstanceType: !Ref InstanceType
      SubnetId: !ImportValue MyVPC-PublicSubnet1A
      BlockDeviceMappings:
      - DeviceName: /dev/xvda
        Ebs:
          VolumeType: gp2
          VolumeSize: 8
      Tags:
      - Key: Name
        Value: myInstance
      KeyName: !Ref KeyName
      SecurityGroupIds:
        - !GetAtt "InstanceSecurityGroup.GroupId"
  
  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: connect with ssh
      VpcId: !ImportValue MyVPC-VPCID
      SecurityGroupIngress:
        -
          IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: !Ref SSHLocation

  